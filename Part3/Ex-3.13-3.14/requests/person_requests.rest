# VARIABLES
@baseUrl = http://localhost:3001
@id = {{getCollection.response.body.$[-1:].id}}
@contentType = application/json;charset=utf-8

# <id>
#   send getCollection once to populate the id variable, if the collection is
#   empty, send createPerson once then resend getCollection


### Get Persons Collection
# @name getCollection
GET {{baseUrl}}/api/persons HTTP/1.1

### Get existing person
GET {{baseUrl}}/api/persons/{{id}} HTTP/1.1

### Get non existing Person
GET {{baseUrl}}/api/persons/012345678901

### Get Person w/ invalid id format
GET {{baseUrl}}/api/persons/spamandeggs HTTP/1.1

### Get Info Page
GET {{baseUrl}}/info HTTP/1.1


### DELETE existing Person
DELETE {{baseUrl}}/api/persons/{{id}} HTTP/1.1

### DELETE non existing person
DELETE {{baseUrl}}/api/persons/012345678901 HTTP/1.1

### DELETE person w/ invalid id format
DELETE {{baseUrl}}/api/persons/-1 HTTP/1.1


### POST person with valid body (send multiple times to test name conflicts)
# @name createPerson
POST {{baseUrl}}/api/persons HTTP/1.1
Content-Type: {{contentType}}

{
    "name": "spamspamspameggsspamspamegsandspam",
    "number": "2348000000000"
}

### POST person to fail name validation
POST {{baseUrl}}/api/persons HTTP/1.1
Content-Type: {{contentType}}

{
    "name": "me",
    "number": "2348000000000"
}

### POST person to fail number validation
POST {{baseUrl}}/api/persons HTTP/1.1
Content-Type: {{contentType}}

{
    "name": "Fail number validation",
    "number": "234"
}

### POST person to fail name and number validation
POST {{baseUrl}}/api/persons HTTP/1.1
Content-Type: {{contentType}}

{
    "name": "me",
    "number": "234"
}

### POST person with malformatted body
POST {{baseUrl}}/api/persons/ HTTP/1.1
Content-Type: {{contentType}}

{
    "name": "Spam and Eggs",
    "number": spam
}

### POST person with empty body
POST {{baseUrl}}/api/persons/ HTTP/1.1
Content-Type: {{contentType}}

### POST person with wrong Content-Type
POST {{baseUrl}}/api/persons/ HTTP/1.1
Content-Type: application/spamandeggs

{
    "name": "Spam and Eggs and Spam",
    "number": "2348000000000"
}


### PUT existing Person
PUT {{baseUrl}}/api/persons/{{id}} HTTP/1.1
Content-Type: {{contentType}}

{
    "name": "Edited this name",
    "number": "Edited this number"
}

### PUT person with malformatted body
PUT {{baseUrl}}/api/persons/{{id}} HTTP/1.1
Content-Type: {{contentType}}

{
    "name": "Spam and Eggs",
    "number": spam
}

### PUT person with empty body
PUT {{baseUrl}}/api/persons/{{id}} HTTP/1.1
Content-Type: {{contentType}}

### PUT person with wrong Content-Type
PUT {{baseUrl}}/api/persons/{{id}} HTTP/1.1
Content-Type: application/spamandeggs

{
    "name": "Spam and Eggs and Spam",
    "number": "2348000000000"
}
